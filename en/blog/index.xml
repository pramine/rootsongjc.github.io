<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jimmy Song - Cloud Native | Open Source | Community – Blogs</title>
    <link>https://jimmysong.io/en/blog/</link>
    <description>Recent content in Blogs on Jimmy Song - Cloud Native | Open Source | Community</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright &amp;copy; 2020 Jimmy Song All Right Reserved; Powerd by Hugo with [educenter](https://github.com/themefisher/educenter-hugo) theme</copyright>
    <lastBuildDate>Fri, 18 Jan 2019 19:06:14 +0800</lastBuildDate>
    
	  <atom:link href="https://jimmysong.io/en/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Cloud Native Sandbox</title>
      <link>https://jimmysong.io/en/blog/cloud-native-sandbox/</link>
      <pubDate>Fri, 18 Jan 2019 19:06:14 +0800</pubDate>
      
      <guid>https://jimmysong.io/en/blog/cloud-native-sandbox/</guid>
      <description>
        
        
        &lt;p&gt;Github: &lt;a href=&#34;https://github.com/rootsongjc/cloud-native-sandbox&#34;&gt;https://github.com/rootsongjc/cloud-native-sandbox&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Cloud Native Sandbox can help you setup a standalone Kubernetes and istio environment with Docker on you own laptop.&lt;/p&gt;
&lt;p&gt;The sandbox integrated with the following components:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Kubernetes v1.10.3&lt;/li&gt;
&lt;li&gt;Istio v1.0.4&lt;/li&gt;
&lt;li&gt;Kubernetes dashboard v1.8.3&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;differences-with-kubernetes-vagrant-centos-cluster&#34;&gt;Differences with kubernetes-vagrant-centos-cluster&lt;/h2&gt;
&lt;p&gt;As I have created the &lt;a href=&#34;https://github.com/rootsongjc/kubernetes-vagrant-centos-cluster&#34;&gt;kubernetes-vagrant-centos-cluster&lt;/a&gt; to set up a Kubernetes cluster and istio service mesh with &lt;code&gt;vagrantfile&lt;/code&gt; which consists of 1 master(also as node) and 3 nodes, but there is a big problem that it is so high weight and consume resources. So I made this light weight sandbox.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Features&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;No VirtualBox or Vagrantfile  required&lt;/li&gt;
&lt;li&gt;Light weight&lt;/li&gt;
&lt;li&gt;High speed, low drag&lt;/li&gt;
&lt;li&gt;Easy to operate&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Services&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;As the sandbox setup, you will get the following services.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;Record with &lt;a href=&#34;https://github.com/nbedos/termtosvg&#34;&gt;termtosvg&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;prerequisite&#34;&gt;Prerequisite&lt;/h2&gt;
&lt;p&gt;You only need a laptop with Docker Desktop installed and &lt;a href=&#34;https://docs.docker.com/docker-for-mac/#kubernetes&#34;&gt;Kubernetes enabled&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Note: Leave enough resources for Docker Desktop. At least 2 CPU, 4G memory.&lt;/p&gt;
&lt;h2 id=&#34;install&#34;&gt;Install&lt;/h2&gt;
&lt;p&gt;To start the sandbox, you have to run the following steps.&lt;/p&gt;
&lt;h3 id=&#34;kubernetes-dashboardoptional&#34;&gt;Kubernetes dashboard(Optional)&lt;/h3&gt;
&lt;p&gt;Install Kubernetes dashboard.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;kubectl apply -f install/dashbaord/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Get the dashboard token.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;kubectl -n kube-system describe secret default| awk &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;$1==&amp;#34;token:&amp;#34;{print $2}&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Expose &lt;code&gt;kubernetes-dashboard&lt;/code&gt; service.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;kubectl -n kube-system get pod -l k8s-app&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;kubernetes-dashboard -o jsonpath&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{.items[0].metadata.name}&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Login to Kubernetes dashboard on &lt;a href=&#34;http://localhost:8001/api/v1/namespaces/kube-system/services/https:kubernetes-dashboard:/proxy/#!/login&#34;&gt;http://localhost:8001/api/v1/namespaces/kube-system/services/https:kubernetes-dashboard:/proxy/#!/login&lt;/a&gt; with the above token.&lt;/p&gt;
&lt;h3 id=&#34;istiorequired&#34;&gt;Istio(Required)&lt;/h3&gt;
&lt;p&gt;Install istio service mesh with the default add-ons.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Install istio&lt;/span&gt;
kubectl apply -f install/istio/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;To expose service &lt;code&gt;grafana&lt;/code&gt; on &lt;a href=&#34;http://localhost:3000&#34;&gt;http://localhost:3000&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;kubectl -n istio-system port-forward &lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;kubectl -n istio-system get pod -l app&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;grafana -o jsonpath&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{.items[0].metadata.name}&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt; 3000:3000 &amp;amp;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;To expose service &lt;code&gt;prometheus&lt;/code&gt; on &lt;a href=&#34;http://localhost:9090&#34;&gt;http://localhost:9090&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;kubectl -n istio-system port-forward &lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;kubectl -n istio-system get pod -l app&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;prometheus -o jsonpath&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{.items[0].metadata.name}&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt; 9090:9090 &amp;amp;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;To expose service &lt;code&gt;jaeger&lt;/code&gt; on &lt;a href=&#34;http://localhost:16686&#34;&gt;http://localhost:16686&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;kubectl -n istio-system port-forward &lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;kubectl -n istio-system get pod -l app&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;jaeger -o jsonpath&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{.items[0].metadata.name}&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt; 16686:16686 &amp;amp;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;To expose service &lt;code&gt;servicegraph&lt;/code&gt; on &lt;a href=&#34;http://localhost:8088/dotviz&#34;&gt;http://localhost:8088/dotviz&lt;/a&gt;, &lt;a href=&#34;http://localhost:8088/force/forcegraph.html&#34;&gt;http://localhost:8088/force/forcegraph.html&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;kubectl -n istio-system port-forward &lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;kubectl -n istio-system get pod -l app&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;servicegraph -o jsonpath&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{.items[0].metadata.name}&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt; 8088:8088 &amp;amp;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;kiali&#34;&gt;Kiali&lt;/h3&gt;
&lt;p&gt;Install &lt;a href=&#34;https://www.kiali.io/&#34;&gt;kiali&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;kubectl -n istio-system apply -f install/kiali
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;To expose service &lt;code&gt;kiali&lt;/code&gt; on &lt;a href=&#34;http://localhost:20001&#34;&gt;http://localhost:20001&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;kubectl -n istio-system port-forward &lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;kubectl -n istio-system get pod -l app&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;kiali -o jsonpath&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{.items[0].metadata.name}&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt; 20001:20001 &amp;amp;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;bookinfo-sample&#34;&gt;Bookinfo sample&lt;/h2&gt;
&lt;p&gt;Deploy &lt;a href=&#34;https://istio.io/docs/examples/bookinfo/&#34;&gt;bookinfo sample&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Enable sidecar auto injection&lt;/span&gt;
kubectl label namespace default istio-injection&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;enabled
&lt;span style=&#34;color:#75715e&#34;&gt;# Deploy bookinfo sample&lt;/span&gt;
kubectl -n default apply -f sample/bookinfo
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Visit &lt;code&gt;productpage&lt;/code&gt; on &lt;a href=&#34;http://localhost/productpage&#34;&gt;http://localhost/productpage&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s generate some loads.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;i&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;0;i&amp;lt;1000;i&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;i+1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;&lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Step-&amp;gt;&lt;/span&gt;$i&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;;curl http://localhost/productpage;&lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You can watch the service status through &lt;a href=&#34;http://localhost:3000&#34;&gt;http://localhost:3000&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;client-tools&#34;&gt;Client tools&lt;/h2&gt;
&lt;p&gt;To operate the applications on Kubernetes, you should install the following tools.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Required&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://kubernetes.io/docs/tasks/tools/install-kubectl/&#34;&gt;kubectl&lt;/a&gt; - Deploy and manage applications on Kubernetes.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://istio.io/docs/reference/commands/istioctl/&#34;&gt;istioctl&lt;/a&gt; - Istio configuration command line utility.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Optional&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ahmetb/kubectx&#34;&gt;kubectx&lt;/a&gt;  - Switch faster between clusters and namespaces in kubectl&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/jonmosco/kube-ps1&#34;&gt;kube-ps1&lt;/a&gt; - Kubernetes prompt info for bash and zsh&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Understanding How Envoy Sidecar Intercept and Route Traffic in Istio Service Mesh</title>
      <link>https://jimmysong.io/en/blog/understanding-how-envoy-sidecar-intercept-and-route-traffic-in-istio-service-mesh/</link>
      <pubDate>Thu, 27 Dec 2018 10:01:22 +0800</pubDate>
      
      <guid>https://jimmysong.io/en/blog/understanding-how-envoy-sidecar-intercept-and-route-traffic-in-istio-service-mesh/</guid>
      <description>
        
        
        &lt;p&gt;This article uses Istio&amp;rsquo;s official &lt;a href=&#34;https://preliminary.istio.io/zh/docs/examples/bookinfo&#34;&gt;bookinfo example&lt;/a&gt; to explain how Envoy performs routing forwarding after the traffic entering the Pod and forwarded to Envoy sidecar by iptables, detailing the inbound and outbound processing. For a detailed analysis of traffic interception, see &lt;a href=&#34;https://jimmysong.io/posts/envoy-sidecar-injection-in-istio-service-mesh-deep-dive/&#34;&gt;Understanding Envoy Sidecar Proxy Injection and Traffic Interception in Istio Service Mesh&lt;/a&gt; .&lt;/p&gt;
&lt;p&gt;The following is a request flow diagram for bookinfo officially provided by Istio, assuming that the DestinationRule is not configured in all services of the bookinfo application.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;006tNbRwly1fyitp0jsghj31o70u0x6p.jpg&#34; alt=&#34;bookinfo&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;overview-of-sidecar-injection-and-traffic-interception-steps&#34;&gt;Overview of Sidecar Injection and Traffic Interception Steps&lt;/h2&gt;
&lt;p&gt;Below is an overview of the steps from Sidecar injection, Pod startup to Sidecar proxy interception traffic and Envoy processing routing.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt; Kubernetes automatically injected through Admission Controller, or the user run &lt;code&gt;istioctl&lt;/code&gt; command to manually inject sidecar container.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2.&lt;/strong&gt; Apply the YAML configuration deployment application. At this time, the service creation configuration file received by the Kubernetes API server already includes the Init container and the sidecar proxy.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3.&lt;/strong&gt; Before the sidecar proxy container and application container are started, the Init container started firstly. The Init container is used to set iptables (the default traffic interception method in Istio, and can also use BPF, IPVS, etc.) to Intercept traffic entering the pod to Envoy sidecar Proxy. All TCP traffic (Envoy currently only supports TCP traffic) will be Intercepted by sidecar, and traffic from other protocols will be requested as originally.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4.&lt;/strong&gt; Launch the Envoy sidecar proxy and application container in the Pod. For the process of this step, please refer to &lt;a href=&#34;https://zhaohuabing.com/post/2018-09-25-istio-traffic-management-impl-intro/#%E9%80%9A%E8%BF%87%E7%AE%A1%E7%90%86%E6%8E%A5%E5%8F%A3%E8%8E%B7%E5%8F%96%E5%AE%8C%E6%95%B4%E9%85%8D%E7%BD%AE&#34;&gt;the complete configuration through the management interface&lt;/a&gt; .&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Sidecar proxy and application container startup order issues&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Start the sidecar proxy and the application container. Which container is started first? Normally, Envoy Sidecar and the application container are all started up before receiving traffic requests. But we can&amp;rsquo;t predict which container will start first, so does the container startup order have an impact on Envoy hijacking traffic? The answer is yes, but it is divided into the following two situations.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Case 1: The application container starts first, and the sidecar proxy is still not ready&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In this case, the traffic is transferred to the 15001 port by iptables, and the port is not monitored in the Pod. The TCP link cannot be established and the request fails.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Case 2: Sidecar starts first, the request arrives and the application is still not ready&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In this case, the request will certainly fail. As for the step at which the failure begins, the reader is left to think.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Question&lt;/strong&gt; : If adding a &lt;a href=&#34;https://jimmysong.io/kubernetes-handbook/guide/configure-liveness-readiness-probes.html&#34;&gt;readiness and living probe&lt;/a&gt; for the sidecar proxy and application container can solve the problem?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5.&lt;/strong&gt; TCP requests that are sent or received from the Pod will be hijacked by iptables. After the inbound traffic is hijacked, it is processed by the Inbound Handler and then forwarded to the application container for processing. The outbound traffic is hijacked by iptables and then forwarded to the Outbound Handler for processing. Upstream and Endpoint.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6.&lt;/strong&gt; Sidecar proxy requests Pilot to use the xDS protocol to synchronize Envoy configurations, including LDS, EDS, CDS, etc., but to ensure the order of updates, Envoy will use ADS to request configuration updates from Pilot directly.&lt;/p&gt;
&lt;h2 id=&#34;how-envoy-handles-route-forwarding&#34;&gt;How Envoy handles route forwarding&lt;/h2&gt;
&lt;p&gt;The following figure shows a &lt;code&gt;productpage&lt;/code&gt;service access request &lt;code&gt;http://reviews.default.svc.cluster.local:9080/&lt;/code&gt;, when traffic enters &lt;code&gt;reviews&lt;/code&gt; the internal services, &lt;code&gt;reviews&lt;/code&gt; internal services Envoy Sidecar is how to do traffic blocked the route forward. The original image can be downloaded on &lt;a href=&#34;https://drive.google.com/file/d/1n-h235tm8DnL_RqxTTA95rgGtrLkBsyr/view?usp=sharing&#34;&gt;Google Drive&lt;/a&gt; .&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;istio-envoy-sidecar-traffic-injection.jpg&#34; alt=&#34;istio iptables&#34;&gt;&lt;/p&gt;
&lt;p&gt;Before the first step, &lt;code&gt;productpage&lt;/code&gt; Envoy Sidecar Pod has been selected by EDS of a request to &lt;code&gt;reviews&lt;/code&gt; a Pod service of its IP address, it sends a TCP connection request.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&#34;https://preliminary.istio.io/zh/help/ops/traffic-management/proxy-cmd/#envoy-%E9%85%8D%E7%BD%AE%E6%B7%B1%E5%BA%A6%E8%A7%A3%E6%9E%90&#34;&gt;Envoy configuration&lt;/a&gt; in the official website of Istio is to describe the process of Envoy doing traffic forwarding. The party considering the traffic of the downstream is to receive the request sent by the downstream. You need to request additional services, such as &lt;code&gt;reviews&lt;/code&gt; service requests need Pod &lt;code&gt;ratings&lt;/code&gt; service.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;reviews&lt;/code&gt;, there are three versions of the service, there is one instance of each version, three versions sidecar similar working steps, only to later &lt;code&gt;reviews-v1-cb8655c75-b97zc&lt;/code&gt; Sidecar flow Pod forwarding this step will be described.&lt;/p&gt;
&lt;h2 id=&#34;understand-the-inbound-handler&#34;&gt;Understand the Inbound Handler&lt;/h2&gt;
&lt;p&gt;The role of the inbound handler is to transfer the traffic from the downstream intercepted by iptables to localhost to establish a connection with the application container inside the Pod.&lt;/p&gt;
&lt;p&gt;Look &lt;code&gt;reviews-v1-cb8655c75-b97zc&lt;/code&gt; at the Listener in the pod.&lt;/p&gt;
&lt;p&gt;Run &lt;code&gt;istioctl pc listener reviews-v1-cb8655c75-b97zc&lt;/code&gt; to see what the Pod has a Listener.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ini&#34; data-lang=&#34;ini&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ADDRESS            PORT      TYPE &lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;172.33.3.3         9080      HTTP &amp;lt;---  Receives all inbound traffic on 9080 from listener 0.0.0.0_15001&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;10.254.0.1         443       TCP  &amp;lt;--+&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;10.254.4.253       80        TCP     |&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;10.254.4.253       8080      TCP     |&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;10.254.109.182     443       TCP     |&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;10.254.22.50       15011     TCP     |&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;10.254.22.50       853       TCP     |&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;10.254.79.114      443       TCP     | &lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;10.254.143.179     15011     TCP     |&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;10.254.0.2         53        TCP     | Receives outbound non-HTTP traffic for relevant IP:PORT pair from listener 0.0.0.0_15001&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;10.254.22.50       443       TCP     |&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;10.254.16.64       42422     TCP     |&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;10.254.127.202     16686     TCP     |&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;10.254.22.50       31400     TCP     |&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;10.254.22.50       8060      TCP     |&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;10.254.169.13      14267     TCP     |&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;10.254.169.13      14268     TCP     |&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;10.254.32.134      8443      TCP     |&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;10.254.118.196     443       TCP  &amp;lt;--+&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;0.0.0.0            15004     HTTP &amp;lt;--+&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;0.0.0.0            8080      HTTP    |&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;0.0.0.0            15010     HTTP    | &lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;0.0.0.0            8088      HTTP    |&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;0.0.0.0            15031     HTTP    |&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;0.0.0.0            9090      HTTP    | &lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;0.0.0.0            9411      HTTP    |  Receives outbound HTTP traffic for relevant port from listener 0.0.0.0_15001&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;0.0.0.0            80        HTTP    |&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;0.0.0.0            15030     HTTP    |&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;0.0.0.0            9080      HTTP    |&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;0.0.0.0            9093      HTTP    |&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;0.0.0.0            3000      HTTP    |&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;0.0.0.0            8060      HTTP    |&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;0.0.0.0            9091      HTTP &amp;lt;--+    &lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;0.0.0.0            15001     TCP  &amp;lt;--- Receives all inbound and outbound traffic to the pod from IP tables and hands over to virtual listener&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;As from &lt;code&gt;productpage&lt;/code&gt; traffic arriving &lt;code&gt;reviews&lt;/code&gt; Pods, downstream must clearly know the IP address of the Pod which is &lt;code&gt;172.33.3.3&lt;/code&gt;, so the request is &lt;code&gt;172.33.3.3:9080&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;virtual Listener&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;As you can see from the Pod&amp;rsquo;s Listener list, the 0.0.0.0:15001/TCP Listener (the actual name is &lt;code&gt;virtual&lt;/code&gt;) listens for all inbound traffic, and the following is the detailed configuration of the Listener.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;{
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;virtual&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;address&amp;#34;&lt;/span&gt;: {
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;socketAddress&amp;#34;&lt;/span&gt;: {
            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;address&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;0.0.0.0&amp;#34;&lt;/span&gt;,
            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;portValue&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;15001&lt;/span&gt;
        }
    },
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;filterChains&amp;#34;&lt;/span&gt;: [
        {
            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;filters&amp;#34;&lt;/span&gt;: [
                {
                    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;envoy.tcp_proxy&amp;#34;&lt;/span&gt;,
                    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;config&amp;#34;&lt;/span&gt;: {
                        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;cluster&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;BlackHoleCluster&amp;#34;&lt;/span&gt;,
                        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;stat_prefix&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;BlackHoleCluster&amp;#34;&lt;/span&gt;
                    }
                }
            ]
        }
    ],
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;useOriginalDst&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;UseOriginalDst&lt;/strong&gt; : As can be seen from the configuration in &lt;code&gt;useOriginalDst&lt;/code&gt;the configuration as specified &lt;code&gt;true&lt;/code&gt;, which is a Boolean value, the default is false, using iptables redirect connections, the proxy may receive port &lt;a href=&#34;http://www.servicemesher.com/envoy/configuration/listener_filters/original_dst_filter.html&#34;&gt;original destination address&lt;/a&gt; is not the same port, thus received at the proxy port It is 15001 and the original destination port is 9080. When this flag is set to true, the Listener redirects the connection to the Listener associated with the original destination address, here &lt;code&gt;172.33.3.3:9080&lt;/code&gt;. Listener If no relationship to the original destination address, the connection processing by the Listener to receive it, i.e. the &lt;code&gt;virtual&lt;/code&gt;Listener, after &lt;code&gt;envoy.tcp_proxy&lt;/code&gt;forwarded to a filter process &lt;code&gt;BlackHoleCluster&lt;/code&gt;, as the name implies, when no matching Envoy virtual listener when the effect of Cluster , will send the request to it and return 404. This will be referred to below Listener provided &lt;code&gt;bindToPort&lt;/code&gt;echoes.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; : This parameter will be discarded, please use the Listener filter of the &lt;a href=&#34;http://www.servicemesher.com/envoy/configuration/listener_filters/original_dst_filter.html&#34;&gt;original destination address&lt;/a&gt; instead. The main purpose of this parameter is: Envoy listens to the 15201 port to intercept the traffic intercepted by iptables via other Listeners instead of directly forwarding it. See the &lt;a href=&#34;https://zhaohuabing.com/post/2018-09-25-istio-traffic-management-impl-intro/#virtual-listener&#34;&gt;Virtual Listener&lt;/a&gt; for details .&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Listener 172.33.3.3_9080&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;As mentioned above, the traffic entering the inbound handler is &lt;code&gt;virtual&lt;/code&gt; transferred to the &lt;code&gt;172.33.3.3_9080&lt;/code&gt; Listener by the Listener. We are looking at the Listener configuration.&lt;/p&gt;
&lt;p&gt;Run &lt;code&gt;istioctl pc listener reviews-v1-cb8655c75-b97zc --address 172.33.3.3 --port 9080 -o json&lt;/code&gt; view.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;[{
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;172.33.3.3_9080&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;address&amp;#34;&lt;/span&gt;: {
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;socketAddress&amp;#34;&lt;/span&gt;: {
            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;address&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;172.33.3.3&amp;#34;&lt;/span&gt;,
            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;portValue&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;9080&lt;/span&gt;
        }
    },
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;filterChains&amp;#34;&lt;/span&gt;: [
        {
            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;filterChainMatch&amp;#34;&lt;/span&gt;: {
                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;transportProtocol&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;raw_buffer&amp;#34;&lt;/span&gt;
            },
            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;filters&amp;#34;&lt;/span&gt;: [
                {
                    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;envoy.http_connection_manager&amp;#34;&lt;/span&gt;,
                    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;config&amp;#34;&lt;/span&gt;: {
                        &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;.&lt;/span&gt; 
                        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;route_config&amp;#34;&lt;/span&gt;: {
                            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;inbound|9080||reviews.default.svc.cluster.local&amp;#34;&lt;/span&gt;,
                            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;validate_clusters&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;,
                            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;virtual_hosts&amp;#34;&lt;/span&gt;: [
                                {
                                    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;domains&amp;#34;&lt;/span&gt;: [
                                        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;*&amp;#34;&lt;/span&gt;
                                    ],
                                    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;inbound|http|9080&amp;#34;&lt;/span&gt;,
                                    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;routes&amp;#34;&lt;/span&gt;: [
                                        {
                                            &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;.&lt;/span&gt;
                                            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;route&amp;#34;&lt;/span&gt;: {
                                                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;cluster&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;inbound|9080||reviews.default.svc.cluster.local&amp;#34;&lt;/span&gt;,
                                                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;max_grpc_timeout&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;0.000s&amp;#34;&lt;/span&gt;,
                                                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;timeout&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;0.000s&amp;#34;&lt;/span&gt;
                                            }
                                        }
                                    ]
                                }
                            ]
                        },
                        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;use_remote_address&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;,
                        &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;.&lt;/span&gt;
                    }
                }
            ]&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;，&lt;/span&gt;
            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;deprecatedV1&amp;#34;&lt;/span&gt;: {
                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;bindToPort&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;
            }
        &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;.&lt;/span&gt;
        },
        {
            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;filterChainMatch&amp;#34;&lt;/span&gt;: {
                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;transportProtocol&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tls&amp;#34;&lt;/span&gt;
            },
            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;tlsContext&amp;#34;&lt;/span&gt;: {&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;.&lt;/span&gt;
            },
            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;filters&amp;#34;&lt;/span&gt;: [&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;.&lt;/span&gt;
            ]
        }
    ],
&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;.&lt;/span&gt;
}]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;bindToPort&lt;/strong&gt; : Note that there are a &lt;a href=&#34;https://www.envoyproxy.io/docs/envoy/v1.6.0/api-v1/listeners/listeners&#34;&gt;&lt;code&gt;bindToPort&lt;/code&gt;&lt;/a&gt;configuration that is &lt;code&gt;false&lt;/code&gt;, the default value of the configuration &lt;code&gt;true&lt;/code&gt;, showing Listener bind to the port, set here to &lt;code&gt;false&lt;/code&gt; the process flow can Listener Listener transferred from the other, i.e., above said &lt;code&gt;virtual&lt;/code&gt; Listener, where we see filterChains.filters in the &lt;code&gt;envoy.http_connection_manager&lt;/code&gt; configuration section:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;route_config&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;:&lt;/span&gt; {
                            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;inbound|9080||reviews.default.svc.cluster.local&amp;#34;&lt;/span&gt;,
                            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;validate_clusters&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;,
                            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;virtual_hosts&amp;#34;&lt;/span&gt;: [
                                {
                                    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;domains&amp;#34;&lt;/span&gt;: [
                                        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;*&amp;#34;&lt;/span&gt;
                                    ],
                                    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;inbound|http|9080&amp;#34;&lt;/span&gt;,
                                    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;routes&amp;#34;&lt;/span&gt;: [
                                        {
                                            &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;.&lt;/span&gt;
                                            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;route&amp;#34;&lt;/span&gt;: {
                                                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;cluster&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;inbound|9080||reviews.default.svc.cluster.local&amp;#34;&lt;/span&gt;,
                                                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;max_grpc_timeout&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;0.000s&amp;#34;&lt;/span&gt;,
                                                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;timeout&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;0.000s&amp;#34;&lt;/span&gt;
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This configuration indicates that traffic will be handed off to the Cluster for &lt;code&gt;inbound|9080||reviews.default.svc.cluster.local&lt;/code&gt; processing.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Cluster inbound|9080||reviews.default.svc.cluster.local&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Run &lt;code&gt;istioctl pc cluster reviews-v1-cb8655c75-b97zc --fqdn reviews.default.svc.cluster.local --direction inbound -o json&lt;/code&gt; to see the Cluster configuration is as follows.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;[
    {
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;inbound|9080||reviews.default.svc.cluster.local&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;connectTimeout&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1.000s&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;hosts&amp;#34;&lt;/span&gt;: [
            {
                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;socketAddress&amp;#34;&lt;/span&gt;: {
                    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;address&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;127.0.0.1&amp;#34;&lt;/span&gt;,
                    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;portValue&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;9080&lt;/span&gt;
                }
            }
        ],
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;circuitBreakers&amp;#34;&lt;/span&gt;: {
            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;thresholds&amp;#34;&lt;/span&gt;: [
                {}
            ]
        }
    }
]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You can see that the Endpoint of the Cluster directly corresponds to localhost, and then the traffic is forwarded by the application container after iptables.&lt;/p&gt;
&lt;h2 id=&#34;understand-the-outbound-handler&#34;&gt;Understand the Outbound Handler&lt;/h2&gt;
&lt;p&gt;Because the &lt;code&gt;reviews&lt;/code&gt; will to &lt;code&gt;ratings&lt;/code&gt; send an HTTP request service, request address are: &lt;code&gt;http://ratings.default.svc.cluster.local:9080/&lt;/code&gt; the role of Outbound handler is to intercept traffic to iptables to native applications sent via Envoy to determine how to route to the upstream.&lt;/p&gt;
&lt;p&gt;The request sent by the application container is outbound traffic. After being hijacked by iptables, it is transferred to the Envoy Outbound handler for processing, then passed through &lt;code&gt;virtual&lt;/code&gt; Listener and &lt;code&gt;0.0.0.0_9080&lt;/code&gt; Listener, and then finds the cluster of upstream through Route 9080, and then finds Endpoint through EDS to perform routing action. This section can refer to the &lt;a href=&#34;https://preliminary.istio.io/zh/help/ops/traffic-management/proxy-cmd/#envoy-%E9%85%8D%E7%BD%AE%E6%B7%B1%E5%BA%A6%E8%A7%A3%E6%9E%90&#34;&gt;Envoy depth configuration resolution&lt;/a&gt; in the official Istio website .&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Route 9080&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;reviews&lt;/code&gt; requests &lt;code&gt;ratings&lt;/code&gt; service, run &lt;code&gt;istioctl proxy-config routes reviews-v1-cb8655c75-b97zc --name 9080 -o json&lt;/code&gt; view route configuration because Envoy VirtualHost will be matched according to HTTP header of domains, so the following list only &lt;code&gt;ratings.default.svc.cluster.local:9080&lt;/code&gt; this one VirtualHost.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;[{
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ratings.default.svc.cluster.local:9080&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;domains&amp;#34;&lt;/span&gt;: [
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ratings.default.svc.cluster.local&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ratings.default.svc.cluster.local:9080&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ratings&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ratings:9080&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ratings.default.svc.cluster&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ratings.default.svc.cluster:9080&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ratings.default.svc&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ratings.default.svc:9080&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ratings.default&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ratings.default:9080&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;10.254.234.130&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;10.254.234.130:9080&amp;#34;&lt;/span&gt;
    ],
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;routes&amp;#34;&lt;/span&gt;: [
        {
            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;match&amp;#34;&lt;/span&gt;: {
                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;prefix&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/&amp;#34;&lt;/span&gt;
            },
            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;route&amp;#34;&lt;/span&gt;: {
                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;cluster&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;outbound|9080||ratings.default.svc.cluster.local&amp;#34;&lt;/span&gt;,
                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;timeout&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;0.000s&amp;#34;&lt;/span&gt;,
                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;maxGrpcTimeout&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;0.000s&amp;#34;&lt;/span&gt;
            },
            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;decorator&amp;#34;&lt;/span&gt;: {
                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;operation&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ratings.default.svc.cluster.local:9080/*&amp;#34;&lt;/span&gt;
            },
            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;perFilterConfig&amp;#34;&lt;/span&gt;: {&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;.&lt;/span&gt;
            }
        }
    ]
},
&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;.&lt;/span&gt;]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You can see the routing of traffic to the Cluster from this Virtual Host configuration &lt;code&gt;outbound|9080||ratings.default.svc.cluster.local&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Endpoint outbound|9080||ratings.default.svc.cluster.local&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Istio 1.1 previous versions do not support the use of &lt;code&gt;istioctl&lt;/code&gt; commands to directly query Endpoint Cluster, you can use the debug queries Pilot endpoint way compromise.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;kubectl exec reviews-v1-cb8655c75-b97zc -c istio-proxy curl http://istio-pilot.istio-system.svc.cluster.local:9093/debug/edsz &amp;gt; endpoints.json
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;endpoints.json&lt;/code&gt; file contains all the Endpoint information of the Cluster, and we only select &lt;code&gt;outbound|9080||ratings.default.svc.cluster.local&lt;/code&gt; the results of the Cluster as follows.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;{
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;clusterName&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;outbound|9080||ratings.default.svc.cluster.local&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;endpoints&amp;#34;&lt;/span&gt;: [
    {
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;locality&amp;#34;&lt;/span&gt;: {

      },
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;lbEndpoints&amp;#34;&lt;/span&gt;: [
        {
          &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;endpoint&amp;#34;&lt;/span&gt;: {
            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;address&amp;#34;&lt;/span&gt;: {
              &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;socketAddress&amp;#34;&lt;/span&gt;: {
                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;address&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;172.33.100.2&amp;#34;&lt;/span&gt;,
                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;portValue&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;9080&lt;/span&gt;
              }
            }
          },
          &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;metadata&amp;#34;&lt;/span&gt;: {
            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;filterMetadata&amp;#34;&lt;/span&gt;: {
              &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;istio&amp;#34;&lt;/span&gt;: {
                  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;uid&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;kubernetes://ratings-v1-8558d4458d-ns6lk.default&amp;#34;&lt;/span&gt;
                }
            }
          }
        }
      ]
    }
  ]
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The Endpoint can be one or more, and Envoy will route it according to certain rules by selecting the appropriate Endpoint.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; : Istio 1.1 will support the &lt;code&gt;istioctl pc endpoint&lt;/code&gt; command to query Endpoint.&lt;/p&gt;
&lt;h2 id=&#34;reference&#34;&gt;Reference&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://preliminary.istio.io/zh/help/ops/traffic-management/proxy-cmd/&#34;&gt;Debug Envoy and Pilot - istio.io&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jimmysong.io/posts/envoy-sidecar-injection-in-istio-service-mesh-deep-dive/&#34;&gt;Understanding Envoy Agent Sidecar Injection and Traffic Interception in Istio Service Mesh - jimmysong.io&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zhaohuabing.com/post/2018-09-25-istio-traffic-management-impl-intro/&#34;&gt;Istio traffic management implementation mechanism deep analysis - zhaohuabing.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Cloud Native and me - the past, current and future</title>
      <link>https://jimmysong.io/en/blog/cloud-native-and-me-the-past-current-and-future/</link>
      <pubDate>Sat, 11 Aug 2018 11:37:36 +0800</pubDate>
      
      <guid>https://jimmysong.io/en/blog/cloud-native-and-me-the-past-current-and-future/</guid>
      <description>
        
        
        &lt;p&gt;Today I am honored to announce that I have become a &lt;a href=&#34;https://www.cncf.io/people/ambassadors/&#34;&gt;CNCF Ambassador&lt;/a&gt;. Here is my story with Cloud Native.&lt;/p&gt;
&lt;h2 id=&#34;origin&#34;&gt;Origin&lt;/h2&gt;
&lt;p&gt;The first time to attend the Cloud Native Computing Foundation is at the LC3 in Beijing 2017. I attended the meeting again this year, and in November of this year, CNCF will hold the &lt;a href=&#34;https://www.lfasiallc.com/events/kubecon-cloudnativecon-china-2018/&#34;&gt;KubeCon &amp;amp; CloudNativeCon&lt;/a&gt; for the first time in Shanghai, China. I&amp;rsquo;ll be there too.&lt;/p&gt;
&lt;h2 id=&#34;cloud-native-books&#34;&gt;Cloud Native Books&lt;/h2&gt;
&lt;p&gt;My origins with the Cloud Native is originated from Kevin Hoffman&amp;rsquo;s book &lt;a href=&#34;https://jimmysong.io/en/book/cloud-native-go&#34;&gt;Cloud Native Go&lt;/a&gt;. I translated this book at the end of 2016. Since then, in China, the translation of the word &lt;code&gt;Cloud Native&lt;/code&gt; has not been determined, we introduced it with &lt;code&gt;云原生&lt;/code&gt; to China.&lt;/p&gt;
&lt;p&gt;And then I begin to write the &lt;a href=&#34;https://github.com/rootsongjc/kubernetes-handbook&#34;&gt;kubernetes-handbook&lt;/a&gt; on GitHub. So far, it has  more than 2000 stars. This book has written more than 200,000 Chinese characters, the first commit happened on April 14, 2017.&lt;/p&gt;
&lt;p&gt;Since the the book Cloud Native Go completed, the publisher recommended another Cloud Native book to me -  &lt;a href=&#34;https://jimmysong.io/en/book/cloud-native-python/&#34;&gt;Cloud Native Python&lt;/a&gt; by Manish Sethi.&lt;/p&gt;
&lt;p&gt;And the book &lt;a href=&#34;https://jimmysong.io/en/book/cloud-native-java/&#34;&gt;Cloud Native Java&lt;/a&gt; by Josh Long and Kenny Bastani.&lt;/p&gt;
&lt;p&gt;In March 2018, with the hope that &lt;code&gt;Bring the world equal opportunities&lt;/code&gt; and &lt;code&gt;Building a Financial Cloud Native Infrastructure&lt;/code&gt;, I joined the &lt;a href=&#34;http://antfin.com&#34;&gt;Ant Financial&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;servicemesher-community&#34;&gt;ServiceMesher Community&lt;/h2&gt;
&lt;p&gt;By the time of May 2018, I start to organize the &lt;a href=&#34;http://www.servicemesher.com&#34;&gt;ServiceMesher&lt;/a&gt; community.&lt;/p&gt;
&lt;p&gt;In the last few months, we work with other open source communities in China, such as &lt;a href=&#34;http://www.k8smeetup.com&#34;&gt;k8smeetup&lt;/a&gt;, &lt;a href=&#34;http://shardingjdbc.io/&#34;&gt;Sharding-Sphere&lt;/a&gt;, &lt;a href=&#34;http://skywalking.apache.org/&#34;&gt;Apache SkyWalking&lt;/a&gt;. Our community has grown to have 1,700 members and two round meetups in &lt;a href=&#34;http://www.servicemesher.com/blog/hangzhou-meetup-20180630/&#34;&gt;Hangzhou&lt;/a&gt; and &lt;a href=&#34;http://www.servicemesher.com/blog/beijing-meetup-20180729/&#34;&gt;Beijing&lt;/a&gt; till now.&lt;/p&gt;
&lt;p&gt;More than 300 people participated in the scene and more than 20,000 people watched it live by &lt;a href=&#34;http://www.itdks.com/eventlist/detail/2311&#34;&gt;IT大咖说&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&#34;future&#34;&gt;Future&lt;/h2&gt;
&lt;p&gt;Here are some hopes of mine:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Open source culture become popular in China&lt;/li&gt;
&lt;li&gt;More and more people would like to be involved in open source projects&lt;/li&gt;
&lt;li&gt;Host one open source project into the CNCF&lt;/li&gt;
&lt;li&gt;A book related to Cloud Native or Service Mesh&lt;/li&gt;
&lt;li&gt;Strengthen cultural exchanges between China and the global&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Finally, welcome to China for traveling or share your topic with us on Cloud Native, and in the mean while we will share our experience on large scale web apps to the world. Hope to hear your voice!&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>High Level Cloud Native From Kevin Hoffman</title>
      <link>https://jimmysong.io/en/blog/high-level-cloud-native-from-kevin-hoffman/</link>
      <pubDate>Fri, 15 Sep 2017 20:32:47 +0800</pubDate>
      
      <guid>https://jimmysong.io/en/blog/high-level-cloud-native-from-kevin-hoffman/</guid>
      <description>
        
        
        &lt;p&gt;Kevin Hoffman(From Capital One, twitter &lt;a href=&#34;https://twitter.com/KevinHoffman&#34;&gt;@KevinHoffman&lt;/a&gt;) was making a speech on &lt;em&gt;TalkingData T11 Smart Data Summit&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;He addressed that &lt;strong&gt;15 Factors of Cloud Native&lt;/strong&gt; which based on Heroku&amp;rsquo;s original &lt;a href=&#34;https://12factor.net&#34;&gt;Twelve-Factor App&lt;/a&gt;, but he add more 3 another factors on it.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s have a look at the 15 factors of Cloud Native.&lt;/p&gt;
&lt;h2 id=&#34;1-one-codebase-one-app&#34;&gt;1. One codebase, one App&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Single version-controlled codebase, many deploys&lt;/li&gt;
&lt;li&gt;Multiple apps should not share code
&lt;ul&gt;
&lt;li&gt;Microservices need separate release schedules&lt;/li&gt;
&lt;li&gt;Upgrade, deploy one without impacting others&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Tie build and deploy pipelines to single codebase&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;2-api-first&#34;&gt;2. API first&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Service ecosystem requires a contract
&lt;ul&gt;
&lt;li&gt;Public API&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Multiple teams on different schedulers
&lt;ul&gt;
&lt;li&gt;Code to contract/API, not code dependencies&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Use well-documented contract standards
&lt;ul&gt;
&lt;li&gt;Protobuf IDL, Swagger, Apiary, etc&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;API First != REST first
&lt;ul&gt;
&lt;li&gt;RPC can be more appropriate in some situations&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;3-dependency-management&#34;&gt;3. Dependency Management&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Explicitly declare dependencies&lt;/li&gt;
&lt;li&gt;Include all dependencies with app release&lt;/li&gt;
&lt;li&gt;Create immutable build artifact (e.g. docker image)&lt;/li&gt;
&lt;li&gt;Rely on smallest docker image
&lt;ul&gt;
&lt;li&gt;Base on scratch if possible&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;App cannot rely on host for system tools or libraries&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;4-design-build-release-run&#34;&gt;4. Design, Build, Release, Run&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Design part of iterative cycle
&lt;ul&gt;
&lt;li&gt;Agile doesn’t mean random or undesigned&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Mature CI/CD pipeline and teams
&lt;ul&gt;
&lt;li&gt;Design to production in days not months&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Build immutable artifacts&lt;/li&gt;
&lt;li&gt;Release automatically deploys to environment
&lt;ul&gt;
&lt;li&gt;Environments contains config, not release artifact&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;5-configuration-credentials-code&#34;&gt;5. Configuration, Credentials, Code&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&amp;ldquo;3 Cs&amp;rdquo; volatile substances that explode when combinded&lt;/li&gt;
&lt;li&gt;Password in a config file is as bad as password in code&lt;/li&gt;
&lt;li&gt;App must accept &amp;ldquo;3 Cs&amp;rdquo; from &lt;strong&gt;environment&lt;/strong&gt; and only use harmless defaults&lt;/li&gt;
&lt;li&gt;Test - Could you expose code on Github and not reveal passwords, URLs, credentials?&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;6-logs&#34;&gt;6. Logs&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Emit formatted logs to stdout&lt;/li&gt;
&lt;li&gt;Code should not know about destination or purpose of log emissions&lt;/li&gt;
&lt;li&gt;Use downstream log aggregator
&lt;ul&gt;
&lt;li&gt;collect, store, process, expose logs&lt;/li&gt;
&lt;li&gt;ELK, Splunk, Sumo, etc&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Use &lt;strong&gt;structured&lt;/strong&gt; logs to allow query and analysis
&lt;ul&gt;
&lt;li&gt;JSON, csv, KV, etc&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Logs are not metrics&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;7-disposability&#34;&gt;7. Disposability&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;App must start as quickly as possible&lt;/li&gt;
&lt;li&gt;App must stop quickly and gracefully&lt;/li&gt;
&lt;li&gt;Processes start and stop all the time in the cloud&lt;/li&gt;
&lt;li&gt;Every scale up/down disposes of processes&lt;/li&gt;
&lt;li&gt;Slow dispose == slow scale&lt;/li&gt;
&lt;li&gt;Slow dispose or startup can cause availability gaps&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;8-backing-services&#34;&gt;8. Backing Services&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Assume all resources supplied by backingservices&lt;/li&gt;
&lt;li&gt;Cannotassume mutable file system
&lt;ul&gt;
&lt;li&gt;“Disk as a Service” (e.g. S3, virtual mounts, etc)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Every backing service is bound resource
&lt;ul&gt;
&lt;li&gt;URL, credentials, etc-&amp;gt; environment config&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Host does not satisfy NFRs
&lt;ul&gt;
&lt;li&gt;Backing services and cloud infrastructure&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;9-environment-parity&#34;&gt;9. Environment Parity&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;“Works on my machine”
&lt;ul&gt;
&lt;li&gt;Cloud-native anti-pattern. Must &lt;strong&gt;work everywhere&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Every commit is candidate for deployment&lt;/li&gt;
&lt;li&gt;Automated acceptance tests
&lt;ul&gt;
&lt;li&gt;Provide no confidence if environments don’t match&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;10-administrative-processes&#34;&gt;10. Administrative Processes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Database migrations&lt;/li&gt;
&lt;li&gt;Run-once scripts or jobs&lt;/li&gt;
&lt;li&gt;Avoid using for batch operations, consider instead:
&lt;ul&gt;
&lt;li&gt;Event sourcing&lt;/li&gt;
&lt;li&gt;Schedulers&lt;/li&gt;
&lt;li&gt;Triggers from queues, etc&lt;/li&gt;
&lt;li&gt;Lambdas/functions&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;11-port-binding&#34;&gt;11. Port Binding&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;In cloud, infrastructure determines port&lt;/li&gt;
&lt;li&gt;App must accept port assigned by platform&lt;/li&gt;
&lt;li&gt;Containers have internal/external ports
&lt;ul&gt;
&lt;li&gt;App design must embrace this&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Never use reserved ports&lt;/li&gt;
&lt;li&gt;Beware of container “host mode” networking&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;12-stateless-processes&#34;&gt;12. Stateless Processes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;What is stateless?&lt;/li&gt;
&lt;li&gt;Long-term state handled by a backing service&lt;/li&gt;
&lt;li&gt;In-memory state lives onlyas long as request&lt;/li&gt;
&lt;li&gt;Requests from same client routed to different instances
&lt;ul&gt;
&lt;li&gt;“Sticky sessions” cloud native anti-pattern&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;13-concurency&#34;&gt;13. Concurency&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Scale horizontally using the process model&lt;/li&gt;
&lt;li&gt;Build disposable, stateless, share-nothing processes&lt;/li&gt;
&lt;li&gt;Avoid adding CPU/RAM to increase scale/throughput&lt;/li&gt;
&lt;li&gt;Where possible, let platform/libraries do threading
&lt;ul&gt;
&lt;li&gt;Many single-threaded services &amp;gt; 1 multi-threaded monolith&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;14-telemetry&#34;&gt;14. Telemetry&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Monitor apps in the cloud like satellite in orbit&lt;/li&gt;
&lt;li&gt;No tether, no live debugger&lt;/li&gt;
&lt;li&gt;Application Perf Monitoring (APM)&lt;/li&gt;
&lt;li&gt;Domain Telemetry&lt;/li&gt;
&lt;li&gt;Health and system logs&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;15-authentication--authorization&#34;&gt;15. Authentication &amp;amp; Authorization&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Security should never be an afterthought&lt;/li&gt;
&lt;li&gt;Auth should be explicit, documented decision
&lt;ul&gt;
&lt;li&gt;Even if anonymous access is allowed&lt;/li&gt;
&lt;li&gt;Don’t allow anonymous access&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Bearer tokens/OAuth/OIDC best practices&lt;/li&gt;
&lt;li&gt;Audit all attempts to access&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;migrating-monoliths-to-the-cloud&#34;&gt;Migrating Monoliths to the Cloud&lt;/h2&gt;
&lt;p&gt;After this 15 factors, he also gave us some tips about how to &lt;strong&gt;migrate monoliths to the Cloud&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Make a rule - stop adding to the monolith
&lt;ul&gt;
&lt;li&gt;All new code must be cloud native&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Prioritize features
&lt;ul&gt;
&lt;li&gt;Where will you get most benefit from cloud native?&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Come up with a plan
&lt;ul&gt;
&lt;li&gt;Decompose monolith over time&lt;/li&gt;
&lt;li&gt;Fast, agile iterations toward ultimate goal&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Use multiple strategies and patterns&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;go---the-best-language-for-building-cloud-native-app&#34;&gt;Go - the Best Language for Building Cloud Native App&lt;/h2&gt;
&lt;p&gt;At last, he advise us the programming language Go is the best language to build Cloud Native applications for these reasons below:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Lightweight&lt;/li&gt;
&lt;li&gt;Easily learning curve&lt;/li&gt;
&lt;li&gt;Compiles to native binaries&lt;/li&gt;
&lt;li&gt;Very fast&lt;/li&gt;
&lt;li&gt;Large, thriving, engaged community
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://gopherize.me&#34;&gt;http://gopherize.me&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Kevin also wrote a book &lt;strong&gt;Cloud Native Go&lt;/strong&gt; to show how to &lt;strong&gt;Building Web Applications and Microservices for the Cloud with Go and React&lt;/strong&gt;. This book has been translated to Chinese by four guys from TalkingData with ❤️. 《Cloud Native Go 构建基于Go和React的云原生Web应用与微服务》published by PHEI publisher house. See the website I built for this book &lt;a href=&#34;https://jimmysong.io/cloud-native-go/&#34;&gt;https://jimmysong.io/cloud-native-go/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Kevin was signing his name on the book&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/jimmysong/image/upload/images/kevin-hoffman-siging-on-the-book.jpg&#34; alt=&#34;kevin siging on the book&#34;&gt;&lt;/p&gt;
&lt;p&gt;This is his first visit to China, as a main translator of this book I an honored to be with him to take this photo.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/jimmysong/image/upload/images/kevin-hoffman-with-me.jpg&#34; alt=&#34;kevin hoffman with me&#34;&gt;&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>

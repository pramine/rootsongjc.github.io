<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Istio on Jimmy Song</title>
    <link>https://jimmysong.io/en/tags/istio/</link>
    <description>Recent content in Istio on Jimmy Song</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Fri, 18 Jan 2019 19:06:14 +0800</lastBuildDate>
    
	<atom:link href="https://jimmysong.io/en/tags/istio/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Cloud Native Sandbox</title>
      <link>https://jimmysong.io/en/posts/cloud-native-sandbox/</link>
      <pubDate>Fri, 18 Jan 2019 19:06:14 +0800</pubDate>
      
      <guid>https://jimmysong.io/en/posts/cloud-native-sandbox/</guid>
      <description>Github: https://github.com/rootsongjc/cloud-native-sandbox
Cloud Native Sandbox can help you setup a standalone Kubernetes and istio environment with Docker on you own laptop.
The sandbox integrated with the following components:
 Kubernetes v1.10.3 Istio v1.0.4 Kubernetes dashboard v1.8.3  Differences with kubernetes-vagrant-centos-cluster As I have created the kubernetes-vagrant-centos-cluster to set up a Kubernetes cluster and istio service mesh with vagrantfile which consists of 1 master(also as node) and 3 nodes, but there is a big problem that it is so high weight and consume resources.</description>
    </item>
    
    <item>
      <title>Understanding How Envoy Sidecar Intercept and Route Traffic in Istio Service Mesh</title>
      <link>https://jimmysong.io/en/posts/understanding-how-envoy-sidecar-intercept-and-route-traffic-in-istio-service-mesh/</link>
      <pubDate>Thu, 27 Dec 2018 10:01:22 +0800</pubDate>
      
      <guid>https://jimmysong.io/en/posts/understanding-how-envoy-sidecar-intercept-and-route-traffic-in-istio-service-mesh/</guid>
      <description>This article uses Istio&amp;rsquo;s official bookinfo example to explain how Envoy performs routing forwarding after the traffic entering the Pod and forwarded to Envoy sidecar by iptables, detailing the inbound and outbound processing. For a detailed analysis of traffic interception, see Understanding Envoy Sidecar Proxy Injection and Traffic Interception in Istio Service Mesh .
The following is a request flow diagram for bookinfo officially provided by Istio, assuming that the DestinationRule is not configured in all services of the bookinfo application.</description>
    </item>
    
    <item>
      <title>Introducing SOFAMesh - A Solution for Large Scale Service Mesh based on Istio</title>
      <link>https://jimmysong.io/en/posts/introducing-sofamesh-a-solution-for-large-scale-service-mesh-by-ant-financial/</link>
      <pubDate>Mon, 16 Jul 2018 12:02:17 +0800</pubDate>
      
      <guid>https://jimmysong.io/en/posts/introducing-sofamesh-a-solution-for-large-scale-service-mesh-by-ant-financial/</guid>
      <description>SOFAMesh is a solution for large-scale Service Mesh based on Istio open-sourced by Ant Financial. At the same time it is also a part of SOFA(Scalable Open Financial Architecture) which is open sourced by Ant Financial too. On the basis of inheriting the powerful functions and rich features of Istio, in order to meet the performance requirements under large-scale deployment and to deal with the actual situation in the practice, the following improvements have been made:</description>
    </item>
    
  </channel>
</rss>
<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Istio on Jimmy Song</title>
    <link>https://jimmysong.io/tags/istio/</link>
    <description>Recent content in Istio on Jimmy Song</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Wed, 20 Mar 2019 07:44:44 +0800</lastBuildDate>
    
	<atom:link href="https://jimmysong.io/tags/istio/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>写在 Istio 1.1发布时</title>
      <link>https://jimmysong.io/posts/istio-11/</link>
      <pubDate>Wed, 20 Mar 2019 07:44:44 +0800</pubDate>
      
      <guid>https://jimmysong.io/posts/istio-11/</guid>
      <description>下面这段是发布说明，来自 Istio 官方博客 https://istio.io/zh/blog/2019/announcing-1.1/，是我翻译的。 Istio</description>
    </item>
    
    <item>
      <title>蚂蚁金服容器与服务创新组毕业生招聘</title>
      <link>https://jimmysong.io/jobs/antfin-container-serverless/</link>
      <pubDate>Tue, 19 Mar 2019 15:35:18 +0800</pubDate>
      
      <guid>https://jimmysong.io/jobs/antfin-container-serverless/</guid>
      <description>蚂蚁金服容器与服务创新组招聘优秀毕业生啦，欢迎致力于云原生微服务研发的同学投递简历。容器与服务创新组负责金融级云原生微服务基础设施的研发与创</description>
    </item>
    
    <item>
      <title>捐献Istio Handbook给ServiceMesher社区</title>
      <link>https://jimmysong.io/posts/istio-handbook-by-servicemesher/</link>
      <pubDate>Sun, 10 Mar 2019 16:55:11 +0800</pubDate>
      
      <guid>https://jimmysong.io/posts/istio-handbook-by-servicemesher/</guid>
      <description>Istio handbook 原是我创作的一本开源电子书（见 https://jimmysong.io/istio-handbook）在捐献给 ServiceMesher 社区之前已经撰写了8个月</description>
    </item>
    
    <item>
      <title>Istio知识图谱 v0.1 发布及 Istio Handbook 社区图书启动孵化</title>
      <link>https://jimmysong.io/posts/istio-knowledge-map-and-handbook/</link>
      <pubDate>Tue, 26 Feb 2019 14:09:04 +0800</pubDate>
      
      <guid>https://jimmysong.io/posts/istio-knowledge-map-and-handbook/</guid>
      <description>2019年2月15日晚，我在朋友圈里发起了 Istio 知识图谱项目。 Istio 知识图谱发起 而后获得 ServiceMesher 社区成员的热烈响应，在此后的一周内陆续有151参与进来。 Istio</description>
    </item>
    
    <item>
      <title>Kubernetes与云原生2018年终总结及2019年展望</title>
      <link>https://jimmysong.io/posts/kubernetes-and-cloud-native-outlook-2019/</link>
      <pubDate>Tue, 29 Jan 2019 13:54:50 +0800</pubDate>
      
      <guid>https://jimmysong.io/posts/kubernetes-and-cloud-native-outlook-2019/</guid>
      <description>去年我写了Kubernetes与云原生2017年年终总结及2018年展望，按照惯例也应该推出2018年的总结和2019年的展望了，写这篇文章</description>
    </item>
    
    <item>
      <title>Service Mesh——后 Kubernetes 时代的微服务</title>
      <link>https://jimmysong.io/posts/service-mesh-the-microservices-in-post-kubernetes-era/</link>
      <pubDate>Tue, 15 Jan 2019 17:49:37 +0800</pubDate>
      
      <guid>https://jimmysong.io/posts/service-mesh-the-microservices-in-post-kubernetes-era/</guid>
      <description>这不是一篇教程，本文试图带您梳理清楚 Kubernetes、Envoy（xDS 协议）以及 Istio Service Mesh 之间的关系及内在联系。本文介绍了 Kubernetes 中的负载均衡方</description>
    </item>
    
    <item>
      <title>Kubernetes和Istio服务网格（Service Mesh）云原生本地视频Demo演示</title>
      <link>https://jimmysong.io/posts/cloud-native-kubernetes-service-mesh-local-demo-show/</link>
      <pubDate>Wed, 02 Jan 2019 20:57:22 +0800</pubDate>
      
      <guid>https://jimmysong.io/posts/cloud-native-kubernetes-service-mesh-local-demo-show/</guid>
      <description>本视频为本人在2018年最后一天录制，演示使用 rootsongjc/kubernetes-vagrant-centos-cluster 自动部署 Kubernetes 集群和 Istio Service Mesh。 前几天天我说到 kubernetes-vagrant-cento</description>
    </item>
    
    <item>
      <title>理解 Istio Service Mesh 中 Envoy Sidecar 代理的路由转发</title>
      <link>https://jimmysong.io/posts/envoy-sidecar-routing-of-istio-service-mesh-deep-dive/</link>
      <pubDate>Wed, 26 Dec 2018 18:32:27 +0800</pubDate>
      
      <guid>https://jimmysong.io/posts/envoy-sidecar-routing-of-istio-service-mesh-deep-dive/</guid>
      <description>本文以 Istio 官方的 bookinfo 示例来讲解在进入 Pod 的流量被 iptables 转交给 Envoy sidecar 后，Envoy 是如何做路由转发的，详述了 Inbound 和 Outbound 处理过程。关于流量拦截的详细分析请参考理</description>
    </item>
    
    <item>
      <title>Istio中的服务和流量的抽象模型</title>
      <link>https://jimmysong.io/posts/istio-service-and-traffic-model/</link>
      <pubDate>Mon, 17 Dec 2018 21:37:35 +0800</pubDate>
      
      <guid>https://jimmysong.io/posts/istio-service-and-traffic-model/</guid>
      <description>本文介绍了 Istio 和 Kubernetes 中的一些服务和流量的抽象模型。虽然 Istio 一开始确定的抽象模型与对接的底层平台无关，但目前来看基本绑定 Kubernetes，本文仅</description>
    </item>
    
    <item>
      <title>Kiali——Istio Service Mesh 的可观察性工具</title>
      <link>https://jimmysong.io/posts/kiali-the-istio-service-mesh-observability-tool/</link>
      <pubDate>Tue, 16 Oct 2018 20:05:28 +0800</pubDate>
      
      <guid>https://jimmysong.io/posts/kiali-the-istio-service-mesh-observability-tool/</guid>
      <description>Istio 中有个 issue #9066 要求将 Istio 中默认使用的 Service Graph 替换成 Kiali。Kiali 最初是由 Red Hat 开源的，用于解决 Service Mesh 中可观察性即微服务的可视性问题。目前已获得 Istio</description>
    </item>
    
    <item>
      <title>Istio 流量管理的基本概念详解</title>
      <link>https://jimmysong.io/posts/istio-traffic-management-basic-concepts/</link>
      <pubDate>Tue, 09 Oct 2018 20:00:02 +0800</pubDate>
      
      <guid>https://jimmysong.io/posts/istio-traffic-management-basic-concepts/</guid>
      <description>本文是对 Istio 中流量管理的基本概念的解析，并以 Istio 官方文档中的部署在 Kubernetes 上的 bookinfo 示例服务来说明 Istio 流量管理的基本概念，更多高级功能和配置请参考 Istio 官方文档</description>
    </item>
    
    <item>
      <title>理解 Istio Service Mesh 中 Envoy 代理 Sidecar 注入及流量劫持</title>
      <link>https://jimmysong.io/posts/envoy-sidecar-injection-in-istio-service-mesh-deep-dive/</link>
      <pubDate>Tue, 11 Sep 2018 10:39:42 +0800</pubDate>
      
      <guid>https://jimmysong.io/posts/envoy-sidecar-injection-in-istio-service-mesh-deep-dive/</guid>
      <description>以往有很多文章讲解 Istio 是如何做 Sidecar 注入的，但是没有讲解注入之后 Sidecar 工作的细节。本文将带大家详细了解 Istio 是如何将 Envoy 作为 Sidecar 的方式注入到应用程序 Pod 中，及 Sidecar</description>
    </item>
    
    <item>
      <title>企业级服务网格架构之路解读</title>
      <link>https://jimmysong.io/posts/the-enterprise-path-to-service-mesh-architectures/</link>
      <pubDate>Fri, 17 Aug 2018 18:05:08 +0800</pubDate>
      
      <guid>https://jimmysong.io/posts/the-enterprise-path-to-service-mesh-architectures/</guid>
      <description>追本溯源，Service Mesh实际上是一种SDN，等同于OSI模型中的会话层。 每一次技术变革，必然要导致生产力和生产关系的变革，我们看到这</description>
    </item>
    
    <item>
      <title>Istio 1.0发布，生态逐步壮大，且可用于生产！</title>
      <link>https://jimmysong.io/posts/istio-1.0-released/</link>
      <pubDate>Wed, 01 Aug 2018 14:42:36 +0800</pubDate>
      
      <guid>https://jimmysong.io/posts/istio-1.0-released/</guid>
      <description>今天，我们很高兴地宣布 Istio 1.0。这距离最初的 0.1 版本发布以来已经过了一年多时间了。从 0.1 起，Istio 就在蓬勃发展的社区、贡献者和用户的帮助下迅</description>
    </item>
    
    <item>
      <title>SOFAMesh &amp; MOSN—基于Istio构建的用于应对大规模流量的Service Mesh解决方案</title>
      <link>https://jimmysong.io/posts/sofamesh-and-mosn-proxy-sidecar-service-mesh-by-ant-financial/</link>
      <pubDate>Mon, 16 Jul 2018 17:48:18 +0800</pubDate>
      
      <guid>https://jimmysong.io/posts/sofamesh-and-mosn-proxy-sidecar-service-mesh-by-ant-financial/</guid>
      <description>4月，蚂蚁金服自主研发的分布式中间件（Scalable Open Financial Architecture，以下简称 SOFA ）启动开源计划，并开放多个组件，（相关背景请点</description>
    </item>
    
    <item>
      <title>Vistio—使用Netflix的Vizceral可视化Istio service mesh</title>
      <link>https://jimmysong.io/posts/vistio-visualize-your-istio-mesh-using-netflixs-vizceral/</link>
      <pubDate>Thu, 21 Jun 2018 12:21:36 +0800</pubDate>
      
      <guid>https://jimmysong.io/posts/vistio-visualize-your-istio-mesh-using-netflixs-vizceral/</guid>
      <description>Vistio GitHub地址：https://github.com/nmnellis/vistio Vizceral是Netflix发布的一个开源项目，</description>
    </item>
    
    <item>
      <title>Istio Service Mesh 教程</title>
      <link>https://jimmysong.io/posts/istio-tutorial/</link>
      <pubDate>Wed, 18 Apr 2018 23:20:47 +0800</pubDate>
      
      <guid>https://jimmysong.io/posts/istio-tutorial/</guid>
      <description>本文是 Istio 管理 Java 微服务的案例教程，使用的所有工具和软件全部基于开源方案，替换了 redhat-developer-demos/istio-tutorial 中的 minishift 环境，使用 kubernetes-vagrant-centos-cluster 替代，沿用了原有的微服务示例，使用 Zipkin 做分布式</description>
    </item>
    
    <item>
      <title>Istio 社区介绍与社区参与注意事项</title>
      <link>https://jimmysong.io/posts/istio-community-tips/</link>
      <pubDate>Sat, 14 Apr 2018 18:34:40 +0800</pubDate>
      
      <guid>https://jimmysong.io/posts/istio-community-tips/</guid>
      <description>本文讲述了参与 Istio 社区和进行 Istio 开发时需要注意的事项。 工作组 绝大多数复杂的开源项目都是以工作组的方式组织的，要想为 Istio 社区做贡献可以加入到以下的工</description>
    </item>
    
    <item>
      <title>Istio中sidecar的注入及示例</title>
      <link>https://jimmysong.io/posts/istio-sidecar-injection-in-kubernetes/</link>
      <pubDate>Tue, 27 Mar 2018 19:58:48 +0800</pubDate>
      
      <guid>https://jimmysong.io/posts/istio-sidecar-injection-in-kubernetes/</guid>
      <description>我们知道 Istio 通过向 Pod 中注入一个 sidecar 容器来将 Pod 纳入到 Istio service mesh 中的，那么这些 sidecar 容器的注入遵循什么样的规范，需要给每个 Pod 增加哪些配置信息才能纳入 Istio service mesh 中</description>
    </item>
    
    <item>
      <title>适用于kubernetes的应用开发部署流程同时集成Istio service mesh</title>
      <link>https://jimmysong.io/posts/creating-cloud-native-app-with-kubernetes/</link>
      <pubDate>Mon, 26 Mar 2018 22:48:44 +0800</pubDate>
      
      <guid>https://jimmysong.io/posts/creating-cloud-native-app-with-kubernetes/</guid>
      <description>本文讲解了如何开发容器化应用，并使用Wercker持续集成工具构建docker镜像上传到docker镜像仓库中，然后在本地使用docker-</description>
    </item>
    
    <item>
      <title>为什么我们需要Istio？</title>
      <link>https://jimmysong.io/posts/why-do-we-need-istio/</link>
      <pubDate>Mon, 19 Mar 2018 23:43:33 +0800</pubDate>
      
      <guid>https://jimmysong.io/posts/why-do-we-need-istio/</guid>
      <description>本文译自Istio Why do I need it? 译者Jimmy Song 我最近没有多少时间去玩k8s，并承认Istio到底给k8s带来了什么方面有点迷失了。这是否会增加</description>
    </item>
    
    <item>
      <title>在kubernetes集群上安装istio并测试bookinfo示例微服务</title>
      <link>https://jimmysong.io/posts/deploy-bookinfo-microservices-on-kubernetes-with-istio/</link>
      <pubDate>Mon, 06 Nov 2017 22:54:40 +0800</pubDate>
      
      <guid>https://jimmysong.io/posts/deploy-bookinfo-microservices-on-kubernetes-with-istio/</guid>
      <description>今年来以 Istio 和 Linkderd 为代表的 Service Mesh 蓬勃发展，大有成为下一代语言异构微服务架构的王者之范，今天又碰巧看到了 Red Hat 的 Burr Sutter 提出了8 Steps to Becoming Awesome with Kubernet</description>
    </item>
    
    <item>
      <title>Istio Service Mesh官方中文文档及社区</title>
      <link>https://jimmysong.io/posts/istio-service-mesh-doc-zh/</link>
      <pubDate>Wed, 20 Sep 2017 14:37:23 +0800</pubDate>
      
      <guid>https://jimmysong.io/posts/istio-service-mesh-doc-zh/</guid>
      <description>Istio是由Google、IBM和Lyft开源的微服务管理、保护和监控框架。Istio为希腊语，意思是”起航“。官方中文文档地址：http</description>
    </item>
    
    <item>
      <title>微服务管理框架service mesh——Istio简介</title>
      <link>https://jimmysong.io/posts/istio-overview/</link>
      <pubDate>Fri, 02 Jun 2017 11:27:57 +0800</pubDate>
      
      <guid>https://jimmysong.io/posts/istio-overview/</guid>
      <description>前言 本文已上传到kubernetes-handbook中的第五章微服务章节，本文仅作归档，更新以kubernetes-handbook为准。</description>
    </item>
    
    <item>
      <title>微服务管理框架service mesh——Istio安装试用笔记</title>
      <link>https://jimmysong.io/posts/istio-installation/</link>
      <pubDate>Thu, 01 Jun 2017 20:18:57 +0800</pubDate>
      
      <guid>https://jimmysong.io/posts/istio-installation/</guid>
      <description>前言 本文已上传到kubernetes-handbook中的第五章微服务章节，本文仅作归档，更新以kubernetes-handbook为准。</description>
    </item>
    
  </channel>
</rss>